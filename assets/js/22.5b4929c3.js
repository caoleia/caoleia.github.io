(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{368:function(e,a,t){"use strict";t.r(a);var r=t(42),n=Object(r.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"juc工具类-exchanger详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#juc工具类-exchanger详解"}},[e._v("#")]),e._v(" JUC工具类: Exchanger详解")]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#exchanger简介"}},[e._v("Exchanger简介")])])])]),t("p"),e._v(" "),t("blockquote",[t("p",[e._v("Exchanger(交换者)是用于线程协作的工具类, 主要用于两个线程之间的数据交换")])]),e._v(" "),t("h2",{attrs:{id:"exchanger简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exchanger简介"}},[e._v("#")]),e._v(" Exchanger简介")]),e._v(" "),t("p",[e._v("Exchanger用于进行两个线程之间的数据交换。它提供一个同步点，在这个同步点，两个线程可以交换彼此的数据。这两个线程通过exchange()方法交换数据，当一个线程先执行exchange()方法后，它会一直等待第二个线程也执行exchange()方法，当这两个线程到达同步点时，这两个线程就可以交换数据了。")])])}),[],!1,null,null,null);a.default=n.exports}}]);