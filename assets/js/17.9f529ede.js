(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{363:function(a,t,e){"use strict";e.r(t);var s=e(42),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"collection-类关系图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection-类关系图"}},[a._v("#")]),a._v(" Collection 类关系图")]),a._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#知识体系结构"}},[a._v("知识体系结构")])]),e("li",[e("a",{attrs:{href:"#collection"}},[a._v("Collection")]),e("ul",[e("li",[e("a",{attrs:{href:"#list"}},[a._v("List")])]),e("li",[e("a",{attrs:{href:"#queue"}},[a._v("Queue")])])])]),e("li",[e("a",{attrs:{href:"#map"}},[a._v("Map")]),e("ul",[e("li",[e("a",{attrs:{href:"#hashmap"}},[a._v("HashMap")])]),e("li",[e("a",{attrs:{href:"#linkedhashmap"}},[a._v("LinkedHashMap")])]),e("li",[e("a",{attrs:{href:"#treemap"}},[a._v("TreeMap")])])])]),e("li",[e("a",{attrs:{href:"#set"}},[a._v("Set")]),e("ul",[e("li",[e("a",{attrs:{href:"#hashset"}},[a._v("HashSet")])]),e("li",[e("a",{attrs:{href:"#linkedhashset"}},[a._v("LinkedHashSet")])]),e("li",[e("a",{attrs:{href:"#treeset"}},[a._v("TreeSet")])])])])])]),e("p"),a._v(" "),e("h2",{attrs:{id:"知识体系结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识体系结构"}},[a._v("#")]),a._v(" 知识体系结构")]),a._v(" "),e("p",[e("img",{attrs:{src:"/_images/java_collections_overview.png",alt:"java_collections_overview"}})]),a._v(" "),e("h2",{attrs:{id:"collection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collection"}},[a._v("#")]),a._v(" Collection")]),a._v(" "),e("blockquote",[e("p",[a._v("容器主要包括 Collection 和 Map 两种，Collection 存储着对象的集合，而 Map 存储着键值对(两个对象)的映射表")])]),a._v(" "),e("h3",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[a._v("#")]),a._v(" List")]),a._v(" "),e("p",[a._v("都实现了List接口，代表有序可重复的集合。")]),a._v(" "),e("h4",{attrs:{id:"arraylist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraylist"}},[a._v("#")]),a._v(" ArrayList")]),a._v(" "),e("p",[a._v("动态数组实现")]),a._v(" "),e("h4",{attrs:{id:"linkedlist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist"}},[a._v("#")]),a._v(" LinkedList")]),a._v(" "),e("p",[a._v("基于双向链表实现，只能顺序访问，但是可以快速地在链表中间插入和删除元素。\n不仅如此，LinkedList 还可以用作栈、队列和双向队列,但是作为队列与栈，在数据量大的情况下推荐使用ArrayDeque。")]),a._v(" "),e("h3",{attrs:{id:"queue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#queue"}},[a._v("#")]),a._v(" Queue")]),a._v(" "),e("p",[a._v("实现了Queue接口,实现了数据结构队列。")]),a._v(" "),e("h4",{attrs:{id:"linkedlist-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedlist-2"}},[a._v("#")]),a._v(" LinkedList")]),a._v(" "),e("p",[a._v("基于双向链表实现的队列")]),a._v(" "),e("h4",{attrs:{id:"arraydeque"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraydeque"}},[a._v("#")]),a._v(" ArrayDeque")]),a._v(" "),e("p",[a._v("基于循环数组实现的队列")]),a._v(" "),e("h4",{attrs:{id:"priorityqueue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#priorityqueue"}},[a._v("#")]),a._v(" PriorityQueue")]),a._v(" "),e("p",[a._v("基于堆结构实现的优先级队列")]),a._v(" "),e("h2",{attrs:{id:"map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" Map")]),a._v(" "),e("h3",{attrs:{id:"hashmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[a._v("#")]),a._v(" HashMap")]),a._v(" "),e("p",[a._v("哈希表")]),a._v(" "),e("h3",{attrs:{id:"linkedhashmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashmap"}},[a._v("#")]),a._v(" LinkedHashMap")]),a._v(" "),e("p",[a._v("有顺序的字典，在数组+链表的基础上扩展链表使用双向链表来维护元素的顺序，顺序为插入顺序或者最近最少使用(LRU)顺序")]),a._v(" "),e("h3",{attrs:{id:"treemap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[a._v("#")]),a._v(" TreeMap")]),a._v(" "),e("p",[a._v("有序的字典,不是插入顺序，按按指定的规则排序,基于红黑树实现。")]),a._v(" "),e("h2",{attrs:{id:"set"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[a._v("#")]),a._v(" Set")]),a._v(" "),e("p",[a._v("使用适配器模式,内部有一个对应的value为Object的Map。")]),a._v(" "),e("h3",{attrs:{id:"hashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[a._v("#")]),a._v(" HashSet")]),a._v(" "),e("h3",{attrs:{id:"linkedhashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[a._v("#")]),a._v(" LinkedHashSet")]),a._v(" "),e("h3",{attrs:{id:"treeset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[a._v("#")]),a._v(" TreeSet")])])}),[],!1,null,null,null);t.default=r.exports}}]);