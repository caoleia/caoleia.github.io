(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{390:function(t,a,s){"use strict";s.r(a);var n=s(42),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("最近两周在开发一个全新的app,第一次搞移动端出现了很多以前接触不到的问题。好在都不难解决,搞明白了以后还是得总结记录一下。")]),t._v(" "),s("p",[t._v("搞后端开发的程序员对于css应该都不擅长。像盒模型、Flex、BFC等很多概念都懂,面试的话也可以说的一套一套的，但真正干精细活的时候就无从下手了，毕竟平常没有实践的机会，偶尔遇到一次百度copy一下以后就忘记了。")]),t._v(" "),s("p",[t._v("这次终于搞了一波实践,很多东西可以理解了,趁这机会把相关的东西总结一把。\n")]),t._v(" "),s("h1",{attrs:{id:"一些基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些基本概念"}},[t._v("#")]),t._v(" 一些基本概念")]),t._v(" "),s("h2",{attrs:{id:"行内元素与块级元素的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素与块级元素的区别"}},[t._v("#")]),t._v(" 行内元素与块级元素的区别")]),t._v(" "),s("p",[t._v("块级元素：")]),t._v(" "),s("ol",[s("li",[t._v("独占一行,默认宽度是容器的100%")]),t._v(" "),s("li",[t._v("内部可以包含行内元素和块级元素(少数块级级元素不能嵌套块级元素例如：p不能嵌套div标签,标题标签中最好不要嵌套div。)")]),t._v(" "),s("li",[t._v("可以设置width,height,margin,padding,border属性")])]),t._v(" "),s("p",[t._v("行内元素：")]),t._v(" "),s("ol",[s("li",[t._v("和其他元素在同一行内")]),t._v(" "),s("li",[t._v("内部不能包含块级元素")]),t._v(" "),s("li",[t._v("设置width、height无效,高度和宽度就是内容的高度和宽度")]),t._v(" "),s("li",[t._v("可以设置margin-left和margin-right属性,设置margin-top和margin-bottom属性无效")]),t._v(" "),s("li",[t._v("可以设置左右border、padding,上下border、padding有效但是到当前行顶部后就不再增加(不会影响其他行)")])]),t._v(" "),s("h2",{attrs:{id:"标准流-正常流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准流-正常流"}},[t._v("#")]),t._v(" 标准流(正常流)")]),t._v(" "),s("p",[t._v("标准流（normal flow），也被称为文档流，是指在不借助任何特殊的css排列规则元素的排布规则。")]),t._v(" "),s("p",[t._v("元素会从左到右，从上到下显示。要让一个元素不在正常流中，唯一的办法是让元素浮动或定位(foloat、absolute、fixed),使元素脱离脱离标准流。")]),t._v(" "),s("h2",{attrs:{id:"非替换元素、替换元素"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非替换元素、替换元素"}},[t._v("#")]),t._v(" 非替换元素、替换元素")]),t._v(" "),s("p",[t._v("替换元素：如果元素的内容包含在文档中，则称之为非替换元素。比如一个span内的文本都在该元素本身之内，这个span就是一个非替换元素。")]),t._v(" "),s("p",[t._v("非替换元素:作为其他内容占位符的一个元素称为替换元素，根据标签和属性的值来显示内容的元素。比如img元素，它只是指向一个图像文件，这个文件插入到文档流中。大多数表单元素（input，根据type属性来显示内容）也是替换元素。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"水平格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#水平格式化"}},[t._v("#")]),t._v(" 水平格式化")]),t._v(" "),s("p",[t._v("我们普遍认为，标准流中块级元素的布局比较易预测，水平方向的表现于垂直方向上还要更容易。")]),t._v(" "),s("p",[t._v("水平格式化的7大属性是：margin-left，border-left，padding-left，width，padding-right，border-right，margin-right。")]),t._v(" "),s("p",[t._v("这7个属性值加起来是父级元素的width值，但也有让人惊讶的时候，比如元素在水平方向的auto值会有何影响，子元素为什么有时候在水平方向上会超出父元素的内容区，要清楚这些原因就要了解元素在水平方向的格式化原理。")]),t._v(" "),s("h2",{attrs:{id:"auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auto"}},[t._v("#")]),t._v(" auto")]),t._v(" "),s("p",[s("code",[t._v("margin-left,width,margin-right可以设置为auto")]),t._v("\n主要有下面几种情况：")]),t._v(" "),s("h3",{attrs:{id:"一个属性设置成auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个属性设置成auto"}},[t._v("#")]),t._v(" 一个属性设置成auto")]),t._v(" "),s("p",[t._v("如果三个属性中某个属性设置了auto,其余两个为特定的值，auto的属性会自动计算,使"),s("code",[t._v("元素框的宽度等于父级元素的width")])]),t._v(" "),s("p",[t._v("margin-left:auto为例")]),t._v(" "),s("div",{staticClass:"language-Html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n     "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("块级元素"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-CSS line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("600px\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #eeb3b3 none repeat scroll 0 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".block")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #ffd800 none repeat scroll 0 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B1.jpg",alt:"Alt text"}}),t._v(" "),s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B2.png",alt:"Alt text"}}),t._v("\n被设置为auto的margin-auto属性值为340px，即margin-left+border-left+padding-left+width+padding-right+border-right+margin-right=340+0+30+100+30+0+100=600")]),t._v(" "),s("p",[t._v("使用auto可以弥补实际值与所需总和的差距，如果三个属性都设置了特定值，但是总和不等于父级元素的width，在Chrome中，margin-right被强制为auto。")]),t._v(" "),s("h3",{attrs:{id:"两个属性设置成auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两个属性设置成auto"}},[t._v("#")]),t._v(" 两个属性设置成auto")]),t._v(" "),s("p",[t._v("margin-left和margin-right设置成auto：如果margin-left和amrgin-right都设置为auto，则它们会设置相等的值，因此元素将在父级元素中居中。这是将"),s("code",[t._v("块级元素居中的一种方法")]),t._v("。(width不大于父元素的width)")]),t._v(" "),s("p",[t._v("某个外边距和width设置成auto：设置为auto的外边距会为0，width会自动计算,使"),s("code",[t._v("元素框的宽度等于父级元素的width")])]),t._v(" "),s("h3",{attrs:{id:"全设置为auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全设置为auto"}},[t._v("#")]),t._v(" 全设置为auto")]),t._v(" "),s("p",[t._v("左右maigin为0,width尽可能的宽,使"),s("code",[t._v("元素框的宽度等于父级元素的width")])]),t._v(" "),s("h2",{attrs:{id:"负外边距"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#负外边距"}},[t._v("#")]),t._v(" 负外边距")]),t._v(" "),s("p",[s("code",[t._v("7个属性只要都是大于等于0的值，总和总是等于父级元素的width，不会超过父级元素的区域")])]),t._v(" "),s("p",[t._v("但是可以通过制定负外边距来得到比父级元素width更大的区域。")]),t._v(" "),s("div",{staticClass:"language-CSS line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".block")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #ffd800 none repeat scroll 0 0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" -400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B3.jpg",alt:"Alt text"}}),t._v(" "),s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B4.jpg",alt:"Alt text"}})]),t._v(" "),s("p",[t._v("设置margin-right为-400px，则元素会大于父级元素width，因为100+0+30+840+30+0-400=600，元素的width为840px。")]),t._v(" "),s("h2",{attrs:{id:"替换元素的水平格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换元素的水平格式化"}},[t._v("#")]),t._v(" 替换元素的水平格式化")]),t._v(" "),s("p",[t._v("替换元素的水平格式化规则和非替换元素的规则类似，只有一个width有区别。")]),t._v(" "),s("p",[t._v("如果width设置为auto，则元素的宽度是内容的固有宽度。")]),t._v(" "),s("p",[t._v("注意：对于img标签，如果width不等于其固有宽度，则height也会等比例增加，除非设置特定值。反过来如果height设置高度，width也会等比例增加")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"垂直格式化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垂直格式化"}},[t._v("#")]),t._v(" 垂直格式化")]),t._v(" "),s("p",[t._v("垂直格式化和水平格式化类似，也有7个相关属性：margin-top，border-top，padding-top，height，padding-bottom，border-bottom，margin-bottom。")]),t._v(" "),s("p",[t._v("这7个属性的总和必须等于父级元素的height属性,与水平方向不同的是，我们不能说子元素的height值是由父元素的height值减去其它六个属性值而确定的。")]),t._v(" "),s("p",[t._v("这是因为这种说法恰好相反了，垂直方向上，真正的逻辑是父元素的height值等于子元素的七大属性值相加的（一个元素的默认高度由其内容决定）。")]),t._v(" "),s("p",[s("code",[t._v("水平方向上先确定父元素的width,然后计算子元素的width。垂直方向上先确定子元素的height,在计算父元素的height")])]),t._v(" "),s("h2",{attrs:{id:"auto-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#auto-2"}},[t._v("#")]),t._v(" auto")]),t._v(" "),s("p",[t._v("其中margin-top，margin-bottom和height可以设置成auto。")]),t._v(" "),s("p",[t._v("与水平格式化不同的是："),s("code",[t._v("一个正常流中的块元素的margin-top和margin-bottom设置为auto后，会被设置为0，即不能将元素垂直居中。")])]),t._v(" "),s("p",[t._v("不同于margin-left和margin-bottom的补充宽度的作用，margin-top和margin-bottom设置为auto时，会被计算为0。也就是说在垂直方向上，不能通过设置两个margin的值为auto而使得正常流元素在包含块中垂直居中了。有没有很气愤，凭什么垂直方向的margin要失去这个功能？仔细想想，就会觉得这种解析方式可以理解了，我们想想margin-left和margin-right为什么可以来补充宽度呢？因为水平方向的“继承”性，即在水平方向上，父元素的宽度永远是最先确定的，再加上七个属性的和相加等于父元素width这一原则，当然可以直接推断出设置为auto的其他水平属性的值了。那垂直方向呢？没办法，垂直方向是子元素的height相关值先确定，再由子元素的七个属性值相加，才会得到父亲的height值。")]),t._v(" "),s("p",[t._v("所以说当设置子元素垂直方向的属性设置为auto时，父元素的height还不知道在哪儿呢，又如何根据父亲的height来确定呢。")]),t._v(" "),s("h3",{attrs:{id:"height设置为auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#height设置为auto"}},[t._v("#")]),t._v(" height设置为auto")]),t._v(" "),s("p",[t._v("当普通流块级元素的height值设置为auto时，会稍稍复杂一些，不同场景则由不同的表现")]),t._v(" "),s("ol",[s("li",[t._v("当块级元素的子元素都是包含文本的行内元素或仅仅包含文本时,最正常的情形,高度由子元素决定。")]),t._v(" "),s("li",[t._v("当块级元素的子元素是且都是块元素且元素本身没有"),s("code",[t._v("padding或border")]),t._v("时，默认高度是从最上方的子元素的上边框到最下方的子元素的下边框之间的距离，即子元素的最上的外边距和最下的外边距会“超出”父元素。("),s("code",[t._v("如果元素没有垂直方向上的边框和内边距,那其高度就是其子元素顶部和底部边框边缘之间的距离")]),t._v(")")]),t._v(" "),s("li",[t._v("当块级元素的子元素是且都是块元素且元素有上内边距或下内边距，或者含有上边框或下边框，则元素会包含对应的最高子元素的上外边距或最低子元素的下外边距。")])]),t._v(" "),s("p",[t._v("2、3情况均与垂直方向的合并外边距有关。")]),t._v(" "),s("h2",{attrs:{id:"垂直外边距合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垂直外边距合并"}},[t._v("#")]),t._v(" 垂直外边距合并")]),t._v(" "),s("p",[t._v("当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。(margin合并)")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("m20"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 外边距20px "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("m10"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" 外边距10px "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".m20")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".m10")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B5.png",alt:"Alt text"}}),t._v("\n如图所示，两个div标签的外边距分别是20px，10px，但是最终两个div之间的距离是20px，而不是20+10=30px")]),t._v(" "),s("p",[t._v("当一个盒子包裹另一个盒子，如果子盒子没有设置border和padding时，子盒子设置的上边距不会起作用。（margin塌陷）")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 400px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".son")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" purple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 50px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("son"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B6.jpg",alt:"Alt text"}}),t._v("\n设置边框后:\n"),s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B7.jpg",alt:"Alt text"}})]),t._v(" "),s("p",[t._v("对于有块级子元素的元素计算高度的方式：如果元素没有垂直方向上的边框和内边距,那其高度就是其子元素顶部和底部边框边缘之间的距离。")]),t._v(" "),s("h2",{attrs:{id:"百分数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#百分数"}},[t._v("#")]),t._v(" 百分数")]),t._v(" "),s("p",[t._v("height设置为百分数：\n把子元素的height设置为百分数，则子元素的高度为父元素的高度乘以这个百分数，这是我们想当然的答案，不过还有一种情况，父元素有可能并没有显示声明height值啊，这个就麻烦了，因为父元素的height值默认情况下还得靠子元素的垂直属性来确定呢，总不能互相依赖吧，只能妥协了，因此这种情况下，尽管为子元素的height设置了百分数，却相当于没有设置，子元素的高度还是依赖于元素本身的内容来确定。")]),t._v(" "),s("p",[t._v("margin-top和margin-bottom设置为百分数：\n垂直方向的margin设置为百分数时，果断放弃了对父元素height值得依赖，转而依赖于父元素的"),s("code",[t._v("width")]),t._v("值，甚至无论父元素的height是否已经指定了值，都会以父元素的width值为基数来计算。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"行内元素的盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素的盒模型"}},[t._v("#")]),t._v(" 行内元素的盒模型")]),t._v(" "),s("p",[t._v("块级元素与行内元素的区别，也是行内元素盒模型与盒模型的区别。")]),t._v(" "),s("p",[t._v("需要注意的是，对于替换元素比如input，img标签："),s("code",[t._v("margin，padding，border")]),t._v("都有效果。")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"ie模型的应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ie模型的应用"}},[t._v("#")]),t._v(" IE模型的应用")]),t._v(" "),s("p",[t._v("盒模型分为标准模型，IE模型。IE6+以上也都改为标准模型了,我们平常都是用的标准模型。但是IE模型也有一定的用处。")]),t._v(" "),s("h2",{attrs:{id:"击败边框-带固定border的百分比布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#击败边框-带固定border的百分比布局"}},[t._v("#")]),t._v(" 击败边框:带固定border的百分比布局")]),t._v(" "),s("p",[t._v("假设我们需要一个五列的布局,如下图\n"),s("img",{attrs:{src:"/images/ref/%E7%9B%92%E6%A8%A1%E5%9E%8B8.png",alt:"Alt text"}})]),t._v(" "),s("p",[t._v("如果不考虑border,相应的CSS代码如下：")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("16%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2% 2%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #03a8d2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("当我们给每一列添加一个2px的边框时，问题出现了，最后一列被挤到下面去了。")]),t._v(" "),s("p",[t._v("我们肯定不能把border也设置为百分比,解决方案是设置CSS的box-sizing属性值为“border-box”，这样就会把borders和padding全都包含在定义的宽高里面。这就意味着一个带有2px边框的200px的div仍然宽度是200px!!")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"盒模型的高度塌陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒模型的高度塌陷"}},[t._v("#")]),t._v(" 盒模型的高度塌陷")]),t._v(" "),s("p",[t._v("出现原因：当父元素没设置足够大小的时候，而子元素设置了浮动的属性，子元素就会跳出父元素的边界（脱离文档流），尤其是当父元素的高度为auto时，而父元素中又没有其它非浮动的可见元素时，父盒子的高度就会直接塌陷为零， 我们称这是CSS高度塌陷。")]),t._v(" "),s("p",[t._v("解决方法是给div设置固定宽高或者清除浮动。\n具体方法在浮动、BFC的总结里在写吧。")])])}),[],!1,null,null,null);a.default=r.exports}}]);