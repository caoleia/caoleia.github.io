(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{388:function(t,s,a){"use strict";a.r(s);var n=a(42),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("标准流里面的限制非常多，导致很多页面效果无法实现。比如要实现并排，并且设置宽高就要脱离标准流。")]),t._v(" "),a("p",[t._v("css中一共有三种手段，使一个元素脱离标准文档流：")]),t._v(" "),a("ol",[a("li",[t._v("浮动")]),t._v(" "),a("li",[t._v("绝对定位")]),t._v(" "),a("li",[t._v("固定定位\n")])]),t._v(" "),a("h1",{attrs:{id:"定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[t._v("#")]),t._v(" 定义")]),t._v(" "),a("blockquote",[a("p",[t._v("浮动让元素脱离正常流，向父容器的左边或右边移动直到外边缘碰到父容器的边框，或者碰到其他浮动元素的边框。")])]),t._v(" "),a("h1",{attrs:{id:"规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),a("p",[t._v("浮动有以下规则：")]),t._v(" "),a("ol",[a("li",[t._v("任何元素都可以浮动，浮动元素会生成一个块级框，而不论它本身是何种元素。")]),t._v(" "),a("li",[t._v("假如在一行之上只有极少的空间可供浮动元素，那么这个元素会跳至下一行，这个过程会持续到某一行拥有足够的空间为止。")]),t._v(" "),a("li",[t._v("浮动虽然脱离了文档流，但还是会影响正常流中inline元素的布局(注意不会影响block元素)。\n文本和行内元素不会被浮动元素覆盖,行框会被缩短,浮动框占据留出的空间,行框围绕浮动框。")])]),t._v(" "),a("h1",{attrs:{id:"基本浮动效果示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本浮动效果示例"}},[t._v("#")]),t._v(" 基本浮动效果示例")]),t._v(" "),a("p",[t._v("当把框 1 向右浮动时，它脱离文档流并且向右移动，直到它的右边缘碰到包含框的右边缘：\n"),a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A81.png",alt:"Alt text"}})]),t._v(" "),a("p",[t._v("当框 1 向左浮动时，它脱离文档流并且向左移动，直到它的左边缘碰到包含框的左边缘。因为它不再处于文档流中，所以它不占据空间，实际上覆盖住了框 2，使框 2 从视图中消失。")]),t._v(" "),a("p",[t._v("如果把所有三个框都向左移动，那么框 1 向左浮动直到碰到包含框，另外两个框向左浮动直到碰到前一个浮动框。\n"),a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A82.png",alt:"Alt text"}})]),t._v(" "),a("p",[t._v("如果包含框太窄，无法容纳水平排列的三个浮动元素，那么其它浮动块向下移动，直到有足够的空间。如果浮动元素的高度不同，那么当它们向下移动时可能被其它浮动元素“卡住”：\n"),a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A83.png",alt:"Alt text"}})]),t._v(" "),a("p",[t._v("文本和行内元素不会被浮动元素覆盖,行框会被缩短,浮动框占据留出的空间,行框围绕浮动框。这个特性说的其实就是文字环绕的效果。\n历史上浮动属性产生之初就是是为了实现“文字环绕”的效果，让文字环绕图片在网页实现类似word中“图文混排”。\n"),a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A84.png",alt:"Alt text"}})]),t._v(" "),a("h1",{attrs:{id:"浮动元素延伸性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮动元素延伸性"}},[t._v("#")]),t._v(" 浮动元素延伸性")]),t._v(" "),a("p",[t._v("将父元素设置成float:left后，所有浮动的子元素就会被包含到父元素里面，我们将这个特性成为浮动元素的延伸性。\n浮动元素的延伸性是什么呢，我们可以将其理解为元素被设置成浮动后，该元素会进行延伸进而包含其所有浮动的子元素")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-bottom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #00ff21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 500px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".high-float")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" left"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" orangered"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("80px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("在浮动元素之前在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，在浮动元素之前，\n\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("high-float"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("浮动元素比父级元素高"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("在浮动元素之后在浮动元素之后在浮动元素之后在浮动元素之后在浮动元素之后在浮动元素之后在浮动元素之后在浮动元素之后"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A85.png",alt:"Alt text"}})]),t._v(" "),a("p",[t._v("给p设置浮动属性后\n"),a("img",{attrs:{src:"/images/ref/%E6%B5%AE%E5%8A%A86.png",alt:"Alt text"}})]),t._v(" "),a("h1",{attrs:{id:"浮动元素的重叠"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮动元素的重叠"}},[t._v("#")]),t._v(" 浮动元素的重叠")]),t._v(" "),a("p",[t._v("通过设置负margin可以使浮动元素与其他元素重叠")]),t._v(" "),a("ol",[a("li",[t._v("行内元素与浮动元素发生重叠，其边框，背景和内容都会显示在浮动元素之上")]),t._v(" "),a("li",[t._v("块级元素与浮动元素发生重叠时，边框和背景会显示在浮动元素之下，内容会显示在浮动元素之上")])]),t._v(" "),a("h1",{attrs:{id:"浮动的原始意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮动的原始意义"}},[t._v("#")]),t._v(" 浮动的原始意义")]),t._v(" "),a("p",[t._v("浮动可以实现很多效果，但是我不想学了。浮动会带来很多不好理解的现象,使用浮动一不小心就带来了未知的效果。")]),t._v(" "),a("p",[t._v("所有浮动可以实现的效果都可以用其他更简单更好理解的css语法实现，唯一一个实现不了的就是“文字环绕图片”。")]),t._v(" "),a("p",[t._v("浮动出现的意义其实只是用来让文字环绕图片而已，仅此而已。")]),t._v(" "),a("h1",{attrs:{id:"浮动的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浮动的本质"}},[t._v("#")]),t._v(" 浮动的本质")]),t._v(" "),a("blockquote",[a("p",[t._v("我将浮动的本质定义为“包裹与破坏”！\n《CSS float浮动的深入研究、详解及拓展》")])]),t._v(" "),a("p",[t._v("包裹性：浮动就是个带有方位的"),a("code",[t._v("display:inline-block")]),t._v("属性。\ndisplay:inline-block某种意义上的作用就是包裹(wrap)，而浮动也有类似的效果")]),t._v(" "),a("p",[t._v("破坏性：文字之所以会环绕含有float属性的图片是因为浮动破坏了正常的inline boxes。")]),t._v(" "),a("h1",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" 清除浮动")]),t._v(" "),a("p",[t._v("浮动的破坏性会导致高度塌陷，清除浮动其实就一个目的，就是解决高度塌陷的问题。")]),t._v(" "),a("p",[t._v("塌陷原因是：元素含有浮动属性 – 破坏inline box – 破坏line box高度 – 没有高度 – 塌陷")]),t._v(" "),a("h2",{attrs:{id:"最简单的做法clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最简单的做法clear"}},[t._v("#")]),t._v(" 最简单的做法clear")]),t._v(" "),a("p",[t._v("语法：\nclear : none | left | right | both\n取值：\nnone  :  默认值。允许两边都可以有浮动对象\nleft   :  不允许左边有浮动对象\nright  :  不允许右边有浮动对象\nboth  :  不允许有浮动对象")]),t._v(" "),a("p",[t._v("定义非常容易理解，但是实际使用时可能会发现不是这么回事。定义没有错，只不过它描述的太模糊，让我们不知所措。")]),t._v(" "),a("p",[t._v("根据上边的基础，假如页面中只有两个元素div1、div2，它们都是左浮动。\n此时div1、div2都浮动，根据规则，div2会跟随在div1后边，但我们仍然希望div2能排列在div1下边，就像div1没有浮动，div2左浮动那样。")]),t._v(" "),a("p",[t._v("这时候就要用到清除浮动（clear），如果单纯根据官方定义，可能会尝试这样写：在div1的CSS样式中添加clear:right;，理解为不允许div1的右边有浮动元素，由于div2是浮动元素，因此会自动下移一行来满足规则。")]),t._v(" "),a("p",[t._v("其实这种理解是不正确的，这样做没有任何效果。对于CSS的清除浮动(clear)，一定要牢记："),a("code",[t._v("这个规则只能影响使用清除的元素本身，不能影响其他元素")])]),t._v(" "),a("p",[t._v("我们是想让div2移动，但我们却是在div1元素的CSS样式中使用了清除浮动，试图通过清除div1右边的浮动元素 (clear:right;)来强迫div2下移，这是不可行的，因为这个清除浮动是在div1中调用的，它只能影响div1，不能影响div2。")]),t._v(" "),a("p",[t._v("要想让div2下移，就必须在div2的CSS样式中使用浮动。本例中div2的左边有浮动元素div1，因此只要在div2的CSS样式中使用clear:left;来指定div2元素左边不允许出现浮动元素，这样div2就被迫下移一行。")]),t._v(" "),a("p",[t._v("最简单的做法：反正只要用到float，在这个标签下面加上")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<div style="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'clear:both;'")]),t._v("></div>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("code",[t._v("缺点:需要加一个没有内容的div")])]),t._v(" "),a("h2",{attrs:{id:"overflow-zoom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overflow-zoom"}},[t._v("#")]),t._v(" overflow + zoom")]),t._v(" "),a("p",[t._v("overflow属性规定当内容溢出元素框时发生的事情\n可能的值")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("visible")]),t._v(" "),a("td",[t._v("默认值。内容不会被修剪，会呈现在元素框之外。")])]),t._v(" "),a("tr",[a("td",[t._v("hidden")]),t._v(" "),a("td",[t._v("内容会被修剪，并且其余内容是不可见的。")])]),t._v(" "),a("tr",[a("td",[t._v("scroll")]),t._v(" "),a("td",[t._v("内容会被修剪，但是浏览器会显示滚动条以便查看其余的内容。")])]),t._v(" "),a("tr",[a("td",[t._v("auto")]),t._v(" "),a("td",[t._v("如果内容被修剪，则浏览器会显示滚动条以便查看其余的内容。")])]),t._v(" "),a("tr",[a("td",[t._v("inherit")]),t._v(" "),a("td",[t._v("规定应该从父元素继承 overflow 属性的值。")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("overflow:hidden;zoom:1")])]),t._v(" "),a("p",[t._v("zoom这个属性是IE特有的，其他浏览器并不支持，除了可以设置和检索对象的缩放比例，再有就是触发IE中的hasLayout属性，用户清除浮动或重叠等。\noverflow：hidden属性是火狐或Google等用于清除浮动的。\n因此为了兼容所有浏览器，做法就是两者结合一起使用。")]),t._v(" "),a("p",[a("code",[t._v("缺点:元素内margin负值定位或是负的绝对定位会被剪裁掉")])]),t._v(" "),a("p",[t._v("一般不用它来清除浮动，只有需要使用overflow顺带时这样用。")]),t._v(" "),a("p",[t._v("这个方法的关键在于触发了BFC，BFC是CSS中的难点之一以后在专门总结。")]),t._v(" "),a("h2",{attrs:{id:"after-zoom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after-zoom"}},[t._v("#")]),t._v(" after + zoom")]),t._v(" "),a("p",[t._v("after：就是指标签的最后一个子元素的后面")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fix")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".fix:after")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("此方法可以说是综合起来最好的方法了，不会影响任何其他样式。")])])}),[],!1,null,null,null);s.default=r.exports}}]);